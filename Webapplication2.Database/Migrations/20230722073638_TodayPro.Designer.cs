// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Webapplication2.Database;

#nullable disable

namespace Webapplication2.Database.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20230722073638_TodayPro")]
    partial class TodayPro
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApplication2.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdderssNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdderssNo = "45",
                            City = "Colombo 1",
                            FirstName = "vinuka",
                            LastName = "navod",
                            Street = "Street 5"
                        },
                        new
                        {
                            Id = 2,
                            AdderssNo = "25",
                            City = "Colombo 2",
                            FirstName = "kavindu",
                            LastName = "hasintha",
                            Street = "Street 15"
                        },
                        new
                        {
                            Id = 3,
                            AdderssNo = "35",
                            City = "Colombo 3",
                            FirstName = "pravindu",
                            LastName = "bhashitha",
                            Street = "Street 13"
                        },
                        new
                        {
                            Id = 4,
                            AdderssNo = "55",
                            City = "Colombo 4",
                            FirstName = "Nethmi",
                            LastName = "anjani",
                            Street = "Street 122"
                        },
                        new
                        {
                            Id = 5,
                            AdderssNo = "75",
                            City = "Colombo 008",
                            FirstName = "Nethmi",
                            LastName = "Nishara",
                            Street = "Street 19"
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberofStudents")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("classes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassName = "nena",
                            NumberofStudents = 23
                        },
                        new
                        {
                            Id = 2,
                            ClassName = "guna",
                            NumberofStudents = 34
                        },
                        new
                        {
                            Id = 3,
                            ClassName = "bala",
                            NumberofStudents = 44
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClassId = 1,
                            country = "sri lanka",
                            name = "vinuka"
                        },
                        new
                        {
                            Id = 2,
                            ClassId = 2,
                            country = "india",
                            name = "kavindu"
                        },
                        new
                        {
                            Id = 3,
                            ClassId = 3,
                            country = "sri lanka",
                            name = "pasan"
                        },
                        new
                        {
                            Id = 4,
                            ClassId = 1,
                            country = "pakisthan",
                            name = "laki"
                        },
                        new
                        {
                            Id = 5,
                            ClassId = 1,
                            country = "india",
                            name = "lokaya"
                        },
                        new
                        {
                            Id = 6,
                            ClassId = 1,
                            country = "sri lanka",
                            name = "batta"
                        },
                        new
                        {
                            Id = 7,
                            ClassId = 3,
                            country = "india",
                            name = "kav"
                        },
                        new
                        {
                            Id = 8,
                            ClassId = 3,
                            country = "sri lanka",
                            name = "chamith"
                        },
                        new
                        {
                            Id = 9,
                            ClassId = 1,
                            country = "pakisthan",
                            name = "supun"
                        },
                        new
                        {
                            Id = 10,
                            ClassId = 1,
                            country = "india",
                            name = "sahan"
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Todoo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Animal")
                        .HasColumnType("int");

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime>("Due")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Animal = 0,
                            AuthorId = 1,
                            Created = new DateTime(2023, 7, 22, 13, 6, 38, 530, DateTimeKind.Local).AddTicks(7471),
                            Description = " A",
                            Due = new DateTime(2023, 7, 27, 13, 6, 38, 530, DateTimeKind.Local).AddTicks(7482),
                            Status = 2,
                            Title = "row 1 "
                        },
                        new
                        {
                            Id = 2,
                            Animal = 0,
                            AuthorId = 2,
                            Created = new DateTime(2023, 7, 22, 13, 6, 38, 530, DateTimeKind.Local).AddTicks(7487),
                            Description = " B",
                            Due = new DateTime(2023, 7, 28, 13, 6, 38, 530, DateTimeKind.Local).AddTicks(7487),
                            Status = 1,
                            Title = "row 2"
                        },
                        new
                        {
                            Id = 3,
                            Animal = 0,
                            AuthorId = 3,
                            Created = new DateTime(2023, 7, 22, 13, 6, 38, 530, DateTimeKind.Local).AddTicks(7488),
                            Description = "C",
                            Due = new DateTime(2023, 7, 29, 13, 6, 38, 530, DateTimeKind.Local).AddTicks(7489),
                            Status = 2,
                            Title = "row 3 "
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Todoomommy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Todoomommies");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Description = "Hello Machan KOhomada IThin.....",
                            Name = "Vinuka Nvod",
                            number = 714703776
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Student", b =>
                {
                    b.HasOne("WebApplication2.Models.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("WebApplication2.Models.Todoo", b =>
                {
                    b.HasOne("WebApplication2.Models.Author", "Author")
                        .WithMany("Todos")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("WebApplication2.Models.Author", b =>
                {
                    b.Navigation("Todos");
                });

            modelBuilder.Entity("WebApplication2.Models.Class", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
